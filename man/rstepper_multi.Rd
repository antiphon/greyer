% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rstepper-multi.R
\name{rstepper_multi}
\alias{rstepper_multi}
\title{Simulate the multivariate Step-neighbour model}
\usage{
rstepper_multi(n = c(100, 100, 100), theta0 = rep(5, length(n)),
  theta1 = rep(list(list(r = 0, theta = 0, c = 0)), length(theta0)),
  theta2 = rep(list(list(r = 0, theta = 0, c = 0)), length(theta0) *
  (length(theta0) - 1)/2), bbox = cbind(0:1, 0:1), iter = 10, x0 = NULL,
  toroidal = 0, dbg = 0, trend = NULL)
}
\arguments{
\item{n}{alternative to theta0: fixed point counts}

\item{theta0}{first order parameters}

\item{theta1}{intra-type interaction parameters. see Details}

\item{theta2}{inter-type interaction parameters. see Details}

\item{bbox}{bounding box}

\item{iter}{iteration of bd}

\item{x0}{the starting pattern location matrix (not necessary)}

\item{toroidal}{toroidal distances? 1=yes, 0=no}

\item{dbg}{dbg verbosity level.}

\item{trend}{optional list of im-objects to be used as trend components for each type.}
}
\description{
Symmetric interaction weights
}
\details{
Let's say we want p types.

Then length(theta0) = p, length(theta1) = p, length(theta2) = p(p-1)/2.

theta1 should be a list of lists, each of which specify the grid "r" and the heights "theta" of the stepfunctions, and a "c", non-negative integer vector of saturation levels.
"r" should not contain 0 as it will be added. The defaults have no interactions.

theta2 should be like theta1, but now giving the parameters for each pair of types (i,j), i < j.

x0, if given, should be a matrix cbind(x_coords, y_coords, marks) where marks are integers between 0 and p-1.
}
\examples{
theta0 <- log( c(200, 200, 200))
theta1 <- list(list(r= 0.02, theta = -1, c=1),
               list(r= 0.02, theta = -1, c=2),
               list(r= 0.02, theta = -1, c=3))
theta2 <- list(list(r= 0.01, theta=1, c=1),
               list(r= 0.01, theta=1, c=2),
               list(r= 0.02, theta=0, c=1))
bbox <- cbind(c(0,.5), c(-1,1))
x <- rstepper_multi(theta0, theta1, theta2, iter = 1e5, dbg=200, toroidal=T, bbox = bbox)
plot(x[,-3], col=x[,3]+1, pch=1+2*x[,3], cex=.5, asp=1)
# Fixed point counts
nvec <- c(200,200,200)
y <- rstepper_multi(n=nvec, theta1, theta2, iter = 1e5, dbg=200, toroidal=T, bbox = bbox)
plot(y[,-3], col=y[,3]+1, pch=1+2*y[,3], cex=.5, asp=1)

}
